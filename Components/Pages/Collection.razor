@page "/Collection"
@inject NavigationManager NavigationManager
@using MTG.Services
@using MTG.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStorage

<h3>Collection</h3>

<ul class="image-list">
    @if (myCards != null)
    {
        @foreach (var myCard in myCards)
        {
            <li>
                <img src="@myCard.Image" @onclick="() => NavigateToCard(myCard.Name)" />
                <button>Remove</button> <br />
            </li>
        }
    }
    else
    {
        <p>Loading collection...</p>
    }
</ul>



@code {
    IQueryable<Models.Card> myCards;
    Search services = new Search();
    string username;

    private void NavigateToCard(string cardName)
    {
        NavigationManager.NavigateTo($"/Card/{cardName}");
    }

    protected async Task GetUsername()
    {
        var result = await ProtectedSessionStorage.GetAsync<string>("User");
        if (result.Success)
        {
            username = result.Value;
            Console.WriteLine("Awaited returned " + username + result.Value);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var result = await ProtectedSessionStorage.GetAsync<string>("User");
        if (result.Success)
        {
            username = result.Value;
        }
        if (username == null)
        {
            NavigationManager.NavigateTo("/Login");
        }
        else
        {

            if (!string.IsNullOrEmpty(username))
            {
                myCards = await services.GetCollectionAsync(username);
            }
            foreach (var card in myCards)
            {
                Console.WriteLine(card.Name);
            }
        }
    }




}
